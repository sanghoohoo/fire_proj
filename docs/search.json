[
  {
    "objectID": "fire_presentation.html",
    "href": "fire_presentation.html",
    "title": "계절별 화재발생 빈도 및 요인 분석",
    "section": "",
    "text": "화재에 의한 피해 감소를 위해 화재가 많이 발생하는 계절, 화재 발생에 많이 기여하는 요인, 인명피해가 많이 발생하는 요인을 분석하여 예방책 제안"
  },
  {
    "objectID": "fire_presentation.html#주제-선정-이유",
    "href": "fire_presentation.html#주제-선정-이유",
    "title": "계절별 화재발생 빈도 및 요인 분석",
    "section": "",
    "text": "화재에 의한 피해 감소를 위해 화재가 많이 발생하는 계절, 화재 발생에 많이 기여하는 요인, 인명피해가 많이 발생하는 요인을 분석하여 예방책 제안"
  },
  {
    "objectID": "fire_presentation.html#계절별-화재발생-빈도",
    "href": "fire_presentation.html#계절별-화재발생-빈도",
    "title": "계절별 화재발생 빈도 및 요인 분석",
    "section": "1. 계절별 화재발생 빈도",
    "text": "1. 계절별 화재발생 빈도\n\n&lt;데이터 설명&gt;\n\nimport pandas as pd\nimport numpy as np\ndf = pd.read_csv(\"data/fire.csv\")\ndf.head()\n\n\n\n\n\n\n\n\n항목\n2020\n2020.1\n2020.2\n2020.3\n2020.4\n2020.5\n2020.6\n2020.7\n2020.8\n...\n2022.3\n2022.4\n2022.5\n2022.6\n2022.7\n2022.8\n2022.9\n2022.10\n2022.11\n2022.12\n\n\n\n\n0\n항목\n계\n전기적요인\n기계적요인\n화학적요인\n가스누출\n교통사고\n부주의\n기타\n자연적요인\n...\n화학적요인\n가스누출\n교통사고\n부주의\n기타\n자연적요인\n방화\n방화의심\n제품결함\n미상\n\n\n1\n합계\n38659\n9329\n4053\n630\n141\n458\n19186\n600\n238\n...\n686\n151\n430\n19666\n516\n214\n400\n346\n167\n3670\n\n\n2\n1월\n3100\n781\n377\n43\n17\n34\n1453\n44\n2\n...\n52\n20\n38\n2173\n48\n4\n37\n31\n9\n381\n\n\n3\n2월\n3011\n748\n342\n46\n15\n40\n1465\n35\n2\n...\n43\n12\n30\n2396\n52\n11\n34\n37\n5\n395\n\n\n4\n3월\n4053\n702\n343\n56\n12\n34\n2443\n55\n13\n...\n40\n9\n26\n1694\n39\n3\n46\n32\n9\n301\n\n\n\n\n5 rows × 38 columns\n\n\n\n\n\n\n&lt;데이터 전처리&gt;\n\n연도별로 분리\n\n\ndata_2020 = df[['항목'] + df.filter(like='2020').columns.tolist()]\n\ndata_2021 = df[['항목'] + df.filter(like='2021').columns.tolist()]\n\ndata_2022 = df[['항목'] + df.filter(like='2022').columns.tolist()]\n\ndata_2022.head()\n\n\n\n\n\n\n\n\n항목\n2022\n2022.1\n2022.2\n2022.3\n2022.4\n2022.5\n2022.6\n2022.7\n2022.8\n2022.9\n2022.10\n2022.11\n2022.12\n\n\n\n\n0\n항목\n계\n전기적요인\n기계적요인\n화학적요인\n가스누출\n교통사고\n부주의\n기타\n자연적요인\n방화\n방화의심\n제품결함\n미상\n\n\n1\n합계\n40113\n10011\n3856\n686\n151\n430\n19666\n516\n214\n400\n346\n167\n3670\n\n\n2\n1월\n4098\n932\n373\n52\n20\n38\n2173\n48\n4\n37\n31\n9\n381\n\n\n3\n2월\n4121\n778\n328\n43\n12\n30\n2396\n52\n11\n34\n37\n5\n395\n\n\n4\n3월\n3318\n811\n308\n40\n9\n26\n1694\n39\n3\n46\n32\n9\n301\n\n\n\n\n\n\n\n\n\n2022년의 제품결함 열 삭제\n\n\ndata_2022 = data_2022.drop(columns = \"2022.11\")\ndata_2022.head()\n\n\n\n\n\n\n\n\n항목\n2022\n2022.1\n2022.2\n2022.3\n2022.4\n2022.5\n2022.6\n2022.7\n2022.8\n2022.9\n2022.10\n2022.12\n\n\n\n\n0\n항목\n계\n전기적요인\n기계적요인\n화학적요인\n가스누출\n교통사고\n부주의\n기타\n자연적요인\n방화\n방화의심\n미상\n\n\n1\n합계\n40113\n10011\n3856\n686\n151\n430\n19666\n516\n214\n400\n346\n3670\n\n\n2\n1월\n4098\n932\n373\n52\n20\n38\n2173\n48\n4\n37\n31\n381\n\n\n3\n2월\n4121\n778\n328\n43\n12\n30\n2396\n52\n11\n34\n37\n395\n\n\n4\n3월\n3318\n811\n308\n40\n9\n26\n1694\n39\n3\n46\n32\n301\n\n\n\n\n\n\n\n\n\n0번째 행을 column으로 지정\n\n\ndata_2020.columns = data_2020.iloc[0] \n\ndata_2021.columns = data_2021.iloc[0] \n\ndata_2022.columns = data_2022.iloc[0] \n\ndata_2022.head()\n\n\n\n\n\n\n\n\n항목\n계\n전기적요인\n기계적요인\n화학적요인\n가스누출\n교통사고\n부주의\n기타\n자연적요인\n방화\n방화의심\n미상\n\n\n\n\n0\n항목\n계\n전기적요인\n기계적요인\n화학적요인\n가스누출\n교통사고\n부주의\n기타\n자연적요인\n방화\n방화의심\n미상\n\n\n1\n합계\n40113\n10011\n3856\n686\n151\n430\n19666\n516\n214\n400\n346\n3670\n\n\n2\n1월\n4098\n932\n373\n52\n20\n38\n2173\n48\n4\n37\n31\n381\n\n\n3\n2월\n4121\n778\n328\n43\n12\n30\n2396\n52\n11\n34\n37\n395\n\n\n4\n3월\n3318\n811\n308\n40\n9\n26\n1694\n39\n3\n46\n32\n301\n\n\n\n\n\n\n\n\n\n0행, 1행 삭제 후 인덱스 초기화\n\n\ndata_2020 = data_2020[2:]\ndata_2020 = data_2020.reset_index(drop=True)\n\ndata_2021 = data_2021[2:]\ndata_2021 = data_2021.reset_index(drop=True)\n\ndata_2022 = data_2022[2:]\ndata_2022 = data_2022.reset_index(drop=True)\n\ndata_2022.head()\n\n\n\n\n\n\n\n\n항목\n계\n전기적요인\n기계적요인\n화학적요인\n가스누출\n교통사고\n부주의\n기타\n자연적요인\n방화\n방화의심\n미상\n\n\n\n\n0\n1월\n4098\n932\n373\n52\n20\n38\n2173\n48\n4\n37\n31\n381\n\n\n1\n2월\n4121\n778\n328\n43\n12\n30\n2396\n52\n11\n34\n37\n395\n\n\n2\n3월\n3318\n811\n308\n40\n9\n26\n1694\n39\n3\n46\n32\n301\n\n\n3\n4월\n3729\n713\n319\n55\n15\n37\n2112\n45\n12\n32\n40\n335\n\n\n4\n5월\n4105\n687\n287\n82\n14\n33\n2479\n41\n14\n39\n34\n382\n\n\n\n\n\n\n\n\n\n데이터타입이 object로 되어 있음\n\n\ndata_2022.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 12 entries, 0 to 11\nData columns (total 13 columns):\n #   Column  Non-Null Count  Dtype \n---  ------  --------------  ----- \n 0   항목      12 non-null     object\n 1   계       12 non-null     object\n 2   전기적요인   12 non-null     object\n 3   기계적요인   12 non-null     object\n 4   화학적요인   12 non-null     object\n 5   가스누출    12 non-null     object\n 6   교통사고    12 non-null     object\n 7   부주의     12 non-null     object\n 8   기타      12 non-null     object\n 9   자연적요인   12 non-null     object\n 10  방화      12 non-null     object\n 11  방화의심    12 non-null     object\n 12  미상      12 non-null     object\ndtypes: object(13)\nmemory usage: 1.3+ KB\n\n\n\n\nfor문을 사용해 데이터타입을 int로 변경\n\n\ncolumns_to_convert = ['계', '전기적요인', '기계적요인',\n                '화학적요인', '가스누출', '교통사고', '부주의', '기타',\n                '자연적요인', '방화', '방화의심', '미상']\n\nfor column in columns_to_convert:\n    data_2020[column] = pd.to_numeric(data_2020[column])\n\nfor column in columns_to_convert:\n    data_2021[column] = pd.to_numeric(data_2021[column])\n\nfor column in columns_to_convert:\n    data_2022[column] = pd.to_numeric(data_2022[column])\n\ndata_2022.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 12 entries, 0 to 11\nData columns (total 13 columns):\n #   Column  Non-Null Count  Dtype \n---  ------  --------------  ----- \n 0   항목      12 non-null     object\n 1   계       12 non-null     int64 \n 2   전기적요인   12 non-null     int64 \n 3   기계적요인   12 non-null     int64 \n 4   화학적요인   12 non-null     int64 \n 5   가스누출    12 non-null     int64 \n 6   교통사고    12 non-null     int64 \n 7   부주의     12 non-null     int64 \n 8   기타      12 non-null     int64 \n 9   자연적요인   12 non-null     int64 \n 10  방화      12 non-null     int64 \n 11  방화의심    12 non-null     int64 \n 12  미상      12 non-null     int64 \ndtypes: int64(12), object(1)\nmemory usage: 1.3+ KB\n\n\n\n\n계절 파생변수 추가\n\n봄: 3월, 4월, 5월 여름: 6월, 7월, 8월 가을: 9월, 10월, 11월 겨울: 12월, 1월, 2월\n\n\n\ndata_2020[\"계절\"] = np.where(data_2020[\"항목\"]\\\n                    .isin([\"3월\", \"4월\", \"5월\"]),\"spring\",\n                    np.where(data_2020[\"항목\"]\\\n                    .isin([\"6월\", \"7월\", \"8월\"]),\"summer\",\n                    np.where(data_2020[\"항목\"]\\\n                    .isin([\"9월\", \"10월\", \"11월\"]),\"fall\",\"winter\")))\n\ndata_2021[\"계절\"] = np.where(data_2021[\"항목\"]\\\n                    .isin([\"3월\", \"4월\", \"5월\"]),\"spring\",\n                    np.where(data_2021[\"항목\"].\\\n                    isin([\"6월\", \"7월\", \"8월\"]),\"summer\",\n                    np.where(data_2021[\"항목\"].\\\n                    isin([\"9월\", \"10월\", \"11월\"]),\"fall\",\"winter\")))\n\ndata_2022[\"계절\"] = np.where(data_2022[\"항목\"]\\\n                    .isin([\"3월\", \"4월\", \"5월\"]),\"spring\",\n                    np.where(data_2022[\"항목\"]\\\n                    .isin([\"6월\", \"7월\", \"8월\"]),\"summer\",\n                    np.where(data_2022[\"항목\"]\\\n                    .isin([\"9월\", \"10월\", \"11월\"]),\"fall\",\"winter\")))\n\ndata_2022.head()\n\n\n\n\n\n\n\n\n항목\n계\n전기적요인\n기계적요인\n화학적요인\n가스누출\n교통사고\n부주의\n기타\n자연적요인\n방화\n방화의심\n미상\n계절\n\n\n\n\n0\n1월\n4098\n932\n373\n52\n20\n38\n2173\n48\n4\n37\n31\n381\nwinter\n\n\n1\n2월\n4121\n778\n328\n43\n12\n30\n2396\n52\n11\n34\n37\n395\nwinter\n\n\n2\n3월\n3318\n811\n308\n40\n9\n26\n1694\n39\n3\n46\n32\n301\nspring\n\n\n3\n4월\n3729\n713\n319\n55\n15\n37\n2112\n45\n12\n32\n40\n335\nspring\n\n\n4\n5월\n4105\n687\n287\n82\n14\n33\n2479\n41\n14\n39\n34\n382\nspring\n\n\n\n\n\n\n\n\n\n계절별 화재 횟수 데이터프레임 생성\n\n\nseason_20 = data_2020.groupby('계절').agg(sum2020=('계','sum'))\n\nseason_21 = data_2021.groupby('계절').agg(sum2021=('계','sum'))\n\nseason_22 = data_2022.groupby('계절').agg(sum2022=('계','sum'))\n\nseason_22\n\n\n\n\n\n\n\n\nsum2022\n\n\n계절\n\n\n\n\n\nfall\n8764\n\n\nspring\n11152\n\n\nsummer\n8285\n\n\nwinter\n11912\n\n\n\n\n\n\n\n\n\n데이터 합치기 (‘concat’ 함수이용)\n\n\nseason = pd.concat([season_20,season_21,season_22], axis=1)\nseason\n\n\n\n\n\n\n\n\nsum2020\nsum2021\nsum2022\n\n\n계절\n\n\n\n\n\n\n\nfall\n8962\n7870\n8764\n\n\nspring\n11340\n9498\n11152\n\n\nsummer\n8408\n8099\n8285\n\n\nwinter\n9949\n10800\n11912\n\n\n\n\n\n\n\n\n\n계절 순서를 ‘봄’, ‘여름’, ‘가을’, ’겨울’로 정렬\n\n\nseason = season.loc[['spring', 'summer', 'fall', 'winter']]\nseason\n\n\n\n\n\n\n\n\nsum2020\nsum2021\nsum2022\n\n\n계절\n\n\n\n\n\n\n\nspring\n11340\n9498\n11152\n\n\nsummer\n8408\n8099\n8285\n\n\nfall\n8962\n7870\n8764\n\n\nwinter\n9949\n10800\n11912\n\n\n\n\n\n\n\n\n\n\n&lt;데이터 시각화&gt;\n\n계절별 화재발생 선 그래프 생성\n\n\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(6, 6))\nplt.plot(season.index, season['sum2020'], marker='o', label='2020')\nplt.plot(season.index, season['sum2021'], marker='o', label='2021')\nplt.plot(season.index, season['sum2022'], marker='o', label='2022')\n\nplt.legend()\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\n&lt;결과 &gt;\n\n2020년, 2021년, 2022년 모두 여름과 가을에 비해봄과 겨울에 화재 발생 빈도가 높게 나타남"
  },
  {
    "objectID": "fire_presentation.html#요인별-화재발생-빈도",
    "href": "fire_presentation.html#요인별-화재발생-빈도",
    "title": "계절별 화재발생 빈도 및 요인 분석",
    "section": "2. 요인별 화재발생 빈도",
    "text": "2. 요인별 화재발생 빈도\n\n&lt;데이터 전처리&gt;\n\n다시 한번 데이터 확인해보기 \n\n\ndata_2022.head\n\n&lt;bound method NDFrame.head of 0    항목     계  전기적요인  기계적요인  화학적요인  가스누출  교통사고   부주의  기타  자연적요인  방화  방화의심  \\\n0    1월  4098    932    373     52    20    38  2173  48      4  37    31   \n1    2월  4121    778    328     43    12    30  2396  52     11  34    37   \n2    3월  3318    811    308     40     9    26  1694  39      3  46    32   \n3    4월  3729    713    319     55    15    37  2112  45     12  32    40   \n4    5월  4105    687    287     82    14    33  2479  41     14  39    34   \n5    6월  2883    865    275     69    13    30  1230  34     26  36    28   \n6    7월  2706    993    323     67     9    36   902  27     25  35    23   \n7    8월  2696   1089    307     69    14    32   808  43     46  18    28   \n8    9월  2696    765    268     64    13    37  1151  39     50  35    19   \n9   10월  3058    722    329     50     9    39  1529  35      8  33    27   \n10  11월  3010    694    337     55     9    46  1476  48     11  24    24   \n11  12월  3693    962    402     40    14    46  1716  65      4  31    23   \n\n0    미상      계절  \n0   381  winter  \n1   395  winter  \n2   301  spring  \n3   335  spring  \n4   382  spring  \n5   256  summer  \n6   245  summer  \n7   235  summer  \n8   236    fall  \n9   260    fall  \n10  272    fall  \n11  372  winter  &gt;\n\n\n\n\n데이터 합치기 (‘concat’ 함수이용)\n\n\ndata_all = pd.concat([data_2020, data_2021,data_2022])\ndata_all\n\n\n\n\n\n\n\n\n항목\n계\n전기적요인\n기계적요인\n화학적요인\n가스누출\n교통사고\n부주의\n기타\n자연적요인\n방화\n방화의심\n미상\n계절\n\n\n\n\n0\n1월\n3100\n781\n377\n43\n17\n34\n1453\n44\n2\n33\n29\n287\nwinter\n\n\n1\n2월\n3011\n748\n342\n46\n15\n40\n1465\n35\n2\n41\n33\n244\nwinter\n\n\n2\n3월\n4053\n702\n343\n56\n12\n34\n2443\n55\n13\n40\n44\n311\nspring\n\n\n3\n4월\n4381\n648\n304\n57\n10\n41\n2849\n55\n8\n28\n50\n331\nspring\n\n\n4\n5월\n2906\n704\n287\n52\n13\n33\n1462\n39\n14\n30\n27\n245\nspring\n\n\n5\n6월\n2968\n732\n312\n60\n9\n47\n1435\n38\n16\n36\n27\n256\nsummer\n\n\n6\n7월\n2423\n861\n289\n57\n12\n35\n885\n29\n30\n24\n28\n173\nsummer\n\n\n7\n8월\n3017\n1331\n355\n57\n7\n31\n834\n52\n71\n24\n22\n233\nsummer\n\n\n8\n9월\n2513\n730\n299\n45\n5\n40\n1010\n48\n61\n24\n22\n229\nfall\n\n\n9\n10월\n3287\n608\n341\n53\n11\n49\n1775\n68\n6\n37\n29\n310\nfall\n\n\n10\n11월\n3162\n669\n369\n46\n17\n34\n1608\n56\n11\n25\n41\n286\nfall\n\n\n11\n12월\n3838\n815\n435\n58\n13\n40\n1967\n81\n4\n35\n29\n361\nwinter\n\n\n0\n1월\n3847\n1067\n475\n48\n28\n36\n1705\n61\n7\n33\n30\n357\nwinter\n\n\n1\n2월\n3500\n708\n322\n52\n13\n37\n1943\n62\n7\n27\n40\n289\nwinter\n\n\n2\n3월\n3180\n721\n348\n61\n14\n26\n1637\n64\n10\n29\n26\n244\nspring\n\n\n3\n4월\n3603\n693\n339\n60\n15\n32\n2037\n67\n6\n21\n37\n296\nspring\n\n\n4\n5월\n2715\n679\n305\n54\n9\n35\n1249\n65\n26\n28\n34\n231\nspring\n\n\n5\n6월\n2456\n666\n324\n54\n9\n28\n1076\n48\n14\n19\n26\n192\nsummer\n\n\n6\n7월\n3036\n1122\n328\n89\n7\n34\n1075\n45\n65\n23\n16\n232\nsummer\n\n\n7\n8월\n2607\n926\n315\n76\n11\n30\n905\n43\n46\n17\n25\n213\nsummer\n\n\n8\n9월\n2252\n643\n239\n44\n5\n31\n983\n48\n28\n23\n18\n190\nfall\n\n\n9\n10월\n2710\n658\n326\n50\n8\n31\n1260\n75\n13\n29\n27\n233\nfall\n\n\n10\n11월\n2908\n720\n335\n39\n9\n37\n1379\n45\n10\n33\n24\n277\nfall\n\n\n11\n12월\n3453\n869\n382\n56\n18\n41\n1626\n56\n9\n26\n36\n334\nwinter\n\n\n0\n1월\n4098\n932\n373\n52\n20\n38\n2173\n48\n4\n37\n31\n381\nwinter\n\n\n1\n2월\n4121\n778\n328\n43\n12\n30\n2396\n52\n11\n34\n37\n395\nwinter\n\n\n2\n3월\n3318\n811\n308\n40\n9\n26\n1694\n39\n3\n46\n32\n301\nspring\n\n\n3\n4월\n3729\n713\n319\n55\n15\n37\n2112\n45\n12\n32\n40\n335\nspring\n\n\n4\n5월\n4105\n687\n287\n82\n14\n33\n2479\n41\n14\n39\n34\n382\nspring\n\n\n5\n6월\n2883\n865\n275\n69\n13\n30\n1230\n34\n26\n36\n28\n256\nsummer\n\n\n6\n7월\n2706\n993\n323\n67\n9\n36\n902\n27\n25\n35\n23\n245\nsummer\n\n\n7\n8월\n2696\n1089\n307\n69\n14\n32\n808\n43\n46\n18\n28\n235\nsummer\n\n\n8\n9월\n2696\n765\n268\n64\n13\n37\n1151\n39\n50\n35\n19\n236\nfall\n\n\n9\n10월\n3058\n722\n329\n50\n9\n39\n1529\n35\n8\n33\n27\n260\nfall\n\n\n10\n11월\n3010\n694\n337\n55\n9\n46\n1476\n48\n11\n24\n24\n272\nfall\n\n\n11\n12월\n3693\n962\n402\n40\n14\n46\n1716\n65\n4\n31\n23\n372\nwinter\n\n\n\n\n\n\n\n\n\n필요없는 열 제거\n\n\ndata_all = data_all.drop(columns=['계'])\ndata_all.head(3)\n\n\n\n\n\n\n\n\n항목\n전기적요인\n기계적요인\n화학적요인\n가스누출\n교통사고\n부주의\n기타\n자연적요인\n방화\n방화의심\n미상\n계절\n\n\n\n\n0\n1월\n781\n377\n43\n17\n34\n1453\n44\n2\n33\n29\n287\nwinter\n\n\n1\n2월\n748\n342\n46\n15\n40\n1465\n35\n2\n41\n33\n244\nwinter\n\n\n2\n3월\n702\n343\n56\n12\n34\n2443\n55\n13\n40\n44\n311\nspring\n\n\n\n\n\n\n\n\n\n요인별 평균 내기\n\n\n# 행과 열 바꿔줌\ndata_all = data_all.transpose()\ndata_all.head()\n\n\n\n\n\n\n\n\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n...\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n항목\n1월\n2월\n3월\n4월\n5월\n6월\n7월\n8월\n9월\n10월\n...\n3월\n4월\n5월\n6월\n7월\n8월\n9월\n10월\n11월\n12월\n\n\n전기적요인\n781\n748\n702\n648\n704\n732\n861\n1331\n730\n608\n...\n811\n713\n687\n865\n993\n1089\n765\n722\n694\n962\n\n\n기계적요인\n377\n342\n343\n304\n287\n312\n289\n355\n299\n341\n...\n308\n319\n287\n275\n323\n307\n268\n329\n337\n402\n\n\n화학적요인\n43\n46\n56\n57\n52\n60\n57\n57\n45\n53\n...\n40\n55\n82\n69\n67\n69\n64\n50\n55\n40\n\n\n가스누출\n17\n15\n12\n10\n13\n9\n12\n7\n5\n11\n...\n9\n15\n14\n13\n9\n14\n13\n9\n9\n14\n\n\n\n\n5 rows × 36 columns\n\n\n\n\n# 필요없는 열 제거\ndata_all = data_all.drop(\"항목\", axis=0)\ndata_all = data_all.drop(\"계절\", axis=0)\ndata_all.head()\n\n\n\n\n\n\n\n\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n...\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n전기적요인\n781\n748\n702\n648\n704\n732\n861\n1331\n730\n608\n...\n811\n713\n687\n865\n993\n1089\n765\n722\n694\n962\n\n\n기계적요인\n377\n342\n343\n304\n287\n312\n289\n355\n299\n341\n...\n308\n319\n287\n275\n323\n307\n268\n329\n337\n402\n\n\n화학적요인\n43\n46\n56\n57\n52\n60\n57\n57\n45\n53\n...\n40\n55\n82\n69\n67\n69\n64\n50\n55\n40\n\n\n가스누출\n17\n15\n12\n10\n13\n9\n12\n7\n5\n11\n...\n9\n15\n14\n13\n9\n14\n13\n9\n9\n14\n\n\n교통사고\n34\n40\n34\n41\n33\n47\n35\n31\n40\n49\n...\n26\n37\n33\n30\n36\n32\n37\n39\n46\n46\n\n\n\n\n5 rows × 36 columns\n\n\n\n\n# 데이터타입이 object로 되어 있음\ndata_all.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nIndex: 11 entries, 전기적요인 to 미상\nData columns (total 36 columns):\n #   Column  Non-Null Count  Dtype \n---  ------  --------------  ----- \n 0   0       11 non-null     object\n 1   1       11 non-null     object\n 2   2       11 non-null     object\n 3   3       11 non-null     object\n 4   4       11 non-null     object\n 5   5       11 non-null     object\n 6   6       11 non-null     object\n 7   7       11 non-null     object\n 8   8       11 non-null     object\n 9   9       11 non-null     object\n 10  10      11 non-null     object\n 11  11      11 non-null     object\n 12  0       11 non-null     object\n 13  1       11 non-null     object\n 14  2       11 non-null     object\n 15  3       11 non-null     object\n 16  4       11 non-null     object\n 17  5       11 non-null     object\n 18  6       11 non-null     object\n 19  7       11 non-null     object\n 20  8       11 non-null     object\n 21  9       11 non-null     object\n 22  10      11 non-null     object\n 23  11      11 non-null     object\n 24  0       11 non-null     object\n 25  1       11 non-null     object\n 26  2       11 non-null     object\n 27  3       11 non-null     object\n 28  4       11 non-null     object\n 29  5       11 non-null     object\n 30  6       11 non-null     object\n 31  7       11 non-null     object\n 32  8       11 non-null     object\n 33  9       11 non-null     object\n 34  10      11 non-null     object\n 35  11      11 non-null     object\ndtypes: object(36)\nmemory usage: 3.2+ KB\n\n\n\n\n# 데이터타입을 int로 변경\ndata_all=data_all.astype(int)\ndata_all.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nIndex: 11 entries, 전기적요인 to 미상\nData columns (total 36 columns):\n #   Column  Non-Null Count  Dtype\n---  ------  --------------  -----\n 0   0       11 non-null     int64\n 1   1       11 non-null     int64\n 2   2       11 non-null     int64\n 3   3       11 non-null     int64\n 4   4       11 non-null     int64\n 5   5       11 non-null     int64\n 6   6       11 non-null     int64\n 7   7       11 non-null     int64\n 8   8       11 non-null     int64\n 9   9       11 non-null     int64\n 10  10      11 non-null     int64\n 11  11      11 non-null     int64\n 12  0       11 non-null     int64\n 13  1       11 non-null     int64\n 14  2       11 non-null     int64\n 15  3       11 non-null     int64\n 16  4       11 non-null     int64\n 17  5       11 non-null     int64\n 18  6       11 non-null     int64\n 19  7       11 non-null     int64\n 20  8       11 non-null     int64\n 21  9       11 non-null     int64\n 22  10      11 non-null     int64\n 23  11      11 non-null     int64\n 24  0       11 non-null     int64\n 25  1       11 non-null     int64\n 26  2       11 non-null     int64\n 27  3       11 non-null     int64\n 28  4       11 non-null     int64\n 29  5       11 non-null     int64\n 30  6       11 non-null     int64\n 31  7       11 non-null     int64\n 32  8       11 non-null     int64\n 33  9       11 non-null     int64\n 34  10      11 non-null     int64\n 35  11      11 non-null     int64\ndtypes: int64(36)\nmemory usage: 3.2+ KB\n\n\n\n\n1년동안 일어나는 요인별 화재건수를 ’total’열 생성(3년 평균)\n\n\ndata_all[\"total\"] = data_all.sum(axis=1)/3\ndata_all.head()\n\n\n\n\n\n\n\n\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n...\n3\n4\n5\n6\n7\n8\n9\n10\n11\ntotal\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n전기적요인\n781\n748\n702\n648\n704\n732\n861\n1331\n730\n608\n...\n713\n687\n865\n993\n1089\n765\n722\n694\n962\n9604.000000\n\n\n기계적요인\n377\n342\n343\n304\n287\n312\n289\n355\n299\n341\n...\n319\n287\n275\n323\n307\n268\n329\n337\n402\n3982.333333\n\n\n화학적요인\n43\n46\n56\n57\n52\n60\n57\n57\n45\n53\n...\n55\n82\n69\n67\n69\n64\n50\n55\n40\n666.333333\n\n\n가스누출\n17\n15\n12\n10\n13\n9\n12\n7\n5\n11\n...\n15\n14\n13\n9\n14\n13\n9\n9\n14\n146.000000\n\n\n교통사고\n34\n40\n34\n41\n33\n47\n35\n31\n40\n49\n...\n37\n33\n30\n36\n32\n37\n39\n46\n46\n428.666667\n\n\n\n\n5 rows × 37 columns\n\n\n\n\n## 한글\nfrom matplotlib import font_manager, rc\n\n# 한글 폰트 설정\nfont_path = \"C:/Windows/Fonts/malgun.ttf\"  # 예시: 윈도우 시스템에 있는 맑은 고딕 폰트 경로\nfont_name = font_manager.FontProperties(fname=font_path).get_name()\nrc('font', family=font_name)\n\n\n\n&lt;데이터 시각화&gt;\n\n요인별 화재건수\n\n\ndata_all[\"total\"].plot.bar(rot=0)\nplt.xticks(fontsize=7, rotation=45)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\n&lt;결과&gt;\n\n3년간 화재발생 요인의 평균을 분석했을 때 부주의가 가장 높게 나타남"
  },
  {
    "objectID": "fire_presentation.html#요인별-인명피해",
    "href": "fire_presentation.html#요인별-인명피해",
    "title": "계절별 화재발생 빈도 및 요인 분석",
    "section": "3. 요인별 인명피해",
    "text": "3. 요인별 인명피해\n\n&lt;데이터 설명&gt;\n\ndamage = pd.read_csv(\"data/di.csv\")\ndamage\n\n\n\n\n\n\n\n\n항목\n2020\n2020.1\n2020.2\n2020.3\n2020.4\n2020.5\n2020.6\n2020.7\n2020.8\n...\n2022.16\n2022.17\n2022.18\n2022.19\n2022.20\n2022.21\n2022.22\n2022.23\n2022.24\n2022.25\n\n\n\n\n0\n항목\n계\n계\n전기적요인\n전기적요인\n기계적요인\n기계적요인\n화학적요인\n화학적요인\n가스누출\n...\n자연적요인\n자연적요인\n방화\n방화\n방화의심\n방화의심\n제품결함\n제품결함\n미상\n미상\n\n\n1\n항목\n사망\n부상\n사망\n부상\n사망\n부상\n사망\n부상\n사망\n...\n사망\n부상\n사망\n부상\n사망\n부상\n사망\n부상\n사망\n부상\n\n\n2\n합계\n365\n1918\n39\n359\n4\n126\n11\n64\n11\n...\n0\n5\n43\n78\n35\n53\n1\n18\n107\n505\n\n\n3\n1월\n44\n144\n9\n30\n0\n7\n0\n5\n6\n...\n0\n0\n3\n7\n2\n3\n0\n0\n12\n47\n\n\n4\n2월\n28\n150\n2\n16\n0\n13\n0\n1\n0\n...\n0\n0\n0\n9\n4\n4\n0\n1\n12\n64\n\n\n5\n3월\n40\n192\n7\n33\n1\n10\n0\n10\n0\n...\n0\n1\n4\n9\n6\n10\n0\n0\n9\n35\n\n\n6\n4월\n72\n197\n5\n60\n1\n5\n0\n6\n0\n...\n0\n1\n8\n6\n0\n2\n0\n0\n10\n50\n\n\n7\n5월\n22\n127\n2\n25\n0\n7\n1\n4\n1\n...\n0\n0\n1\n6\n1\n2\n1\n0\n12\n31\n\n\n8\n6월\n19\n110\n1\n23\n0\n3\n1\n0\n2\n...\n0\n0\n11\n8\n4\n3\n0\n2\n9\n24\n\n\n9\n7월\n28\n180\n3\n12\n0\n25\n0\n6\n1\n...\n0\n0\n2\n6\n4\n15\n0\n2\n3\n28\n\n\n10\n8월\n8\n150\n2\n46\n0\n17\n1\n2\n0\n...\n0\n1\n2\n7\n4\n4\n0\n2\n4\n25\n\n\n11\n9월\n14\n123\n2\n36\n0\n5\n2\n6\n0\n...\n0\n1\n3\n7\n2\n3\n0\n3\n4\n32\n\n\n12\n10월\n25\n161\n2\n24\n1\n11\n1\n8\n0\n...\n0\n1\n2\n3\n5\n3\n0\n4\n8\n17\n\n\n13\n11월\n31\n183\n2\n13\n0\n13\n4\n14\n0\n...\n0\n0\n2\n5\n0\n0\n0\n0\n4\n38\n\n\n14\n12월\n34\n201\n2\n41\n1\n10\n1\n2\n1\n...\n0\n0\n5\n5\n3\n4\n0\n4\n20\n114\n\n\n\n\n15 rows × 75 columns\n\n\n\n\n\n\n&lt;데이터 전처리&gt;\n\n연도별로 분리\n\n\ndamage_20 = damage[['항목'] + damage.filter(like='2020').columns.tolist()]\ndamage_21 = damage[['항목'] + damage.filter(like='2021').columns.tolist()]\ndamage_22 = damage[['항목'] + damage.filter(like='2022').columns.tolist()]\n\ndamage_22.head()\n\n\n\n\n\n\n\n\n항목\n2022\n2022.1\n2022.2\n2022.3\n2022.4\n2022.5\n2022.6\n2022.7\n2022.8\n...\n2022.16\n2022.17\n2022.18\n2022.19\n2022.20\n2022.21\n2022.22\n2022.23\n2022.24\n2022.25\n\n\n\n\n0\n항목\n계\n계\n전기적요인\n전기적요인\n기계적요인\n기계적요인\n화학적요인\n화학적요인\n가스누출\n...\n자연적요인\n자연적요인\n방화\n방화\n방화의심\n방화의심\n제품결함\n제품결함\n미상\n미상\n\n\n1\n항목\n사망\n부상\n사망\n부상\n사망\n부상\n사망\n부상\n사망\n...\n사망\n부상\n사망\n부상\n사망\n부상\n사망\n부상\n사망\n부상\n\n\n2\n합계\n341\n2327\n48\n410\n2\n102\n6\n81\n6\n...\n0\n5\n43\n78\n35\n53\n1\n18\n107\n505\n\n\n3\n1월\n41\n229\n6\n38\n0\n6\n0\n5\n2\n...\n0\n0\n3\n7\n2\n3\n0\n0\n12\n47\n\n\n4\n2월\n28\n230\n2\n24\n0\n18\n0\n3\n0\n...\n0\n0\n0\n9\n4\n4\n0\n1\n12\n64\n\n\n\n\n5 rows × 27 columns\n\n\n\n&lt;br&gt;\n\n행 올리기 (반복되는 기존 열 삭제 및 첫번째 행 올리기)\n\n\ndamage_20.columns = damage_20.iloc[0]\ndamage_20 = damage_20[1:3]\ndamage_20 = damage_20.reset_index(drop=True)\ndamage_20 = damage_20.drop(columns=['항목','계'])\n\ndamage_21.columns = damage_21.iloc[0]\ndamage_21 = damage_21[1:3]\ndamage_21 = damage_21.reset_index(drop=True)\ndamage_21 = damage_21.drop(columns=['항목','계'])\n\ndamage_22.columns = damage_22.iloc[0]\ndamage_22 = damage_22[1:3]\ndamage_22 = damage_22.reset_index(drop=True)\ndamage_22 = damage_22.drop(columns=['항목', '계', '제품결함'])\n\ndamage_22\n\n\n\n\n\n\n\n\n전기적요인\n전기적요인\n기계적요인\n기계적요인\n화학적요인\n화학적요인\n가스누출\n가스누출\n교통사고\n교통사고\n...\n기타\n기타\n자연적요인\n자연적요인\n방화\n방화\n방화의심\n방화의심\n미상\n미상\n\n\n\n\n0\n사망\n부상\n사망\n부상\n사망\n부상\n사망\n부상\n사망\n부상\n...\n사망\n부상\n사망\n부상\n사망\n부상\n사망\n부상\n사망\n부상\n\n\n1\n48\n410\n2\n102\n6\n81\n6\n141\n9\n19\n...\n10\n20\n0\n5\n43\n78\n35\n53\n107\n505\n\n\n\n\n2 rows × 22 columns\n\n\n\n\n\n행열 전환\n\n\ndamage_20 = damage_20.transpose()\n\ndamage_21 = damage_21.transpose()\n\ndamage_22 = damage_22.transpose()\n\ndamage_22.head()\n\n\n\n\n\n\n\n\n0\n1\n\n\n0\n\n\n\n\n\n\n전기적요인\n사망\n48\n\n\n전기적요인\n부상\n410\n\n\n기계적요인\n사망\n2\n\n\n기계적요인\n부상\n102\n\n\n화학적요인\n사망\n6\n\n\n\n\n\n\n\n\n\n데이터 합치기 (‘concat’ 함수이용)\n\n\ndamage_total = pd.concat([damage_20, damage_21[1], damage_22[1]], axis=1)\n    \ndamage_total = damage_total.drop(0, axis=1)\n    \ndamage_total.head()\n\n\n\n\n\n\n\n\n1\n1\n1\n\n\n0\n\n\n\n\n\n\n\n전기적요인\n39\n42\n48\n\n\n전기적요인\n359\n276\n410\n\n\n기계적요인\n4\n4\n2\n\n\n기계적요인\n126\n105\n102\n\n\n화학적요인\n11\n2\n6\n\n\n\n\n\n\n\n\n\n계산 가능한 숫자형 데이터로 전환하기\n\n\ndamage_total=damage_total.astype(int)\ndamage_total.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nIndex: 22 entries, 전기적요인 to 미상\nData columns (total 3 columns):\n #   Column  Non-Null Count  Dtype\n---  ------  --------------  -----\n 0   1       22 non-null     int64\n 1   1       22 non-null     int64\n 2   1       22 non-null     int64\ndtypes: int64(3)\nmemory usage: 704.0+ bytes\n\n\n\n\n사망 데이터 분류하기\n\n\ndeath = damage_total.iloc[::2]\ndeath\n\n\n\n\n\n\n\n\n1\n1\n1\n\n\n0\n\n\n\n\n\n\n\n전기적요인\n39\n42\n48\n\n\n기계적요인\n4\n4\n2\n\n\n화학적요인\n11\n2\n6\n\n\n가스누출\n11\n1\n6\n\n\n교통사고\n14\n13\n9\n\n\n부주의\n77\n67\n74\n\n\n기타\n2\n2\n10\n\n\n자연적요인\n0\n0\n0\n\n\n방화\n27\n25\n43\n\n\n방화의심\n39\n23\n35\n\n\n미상\n141\n97\n107\n\n\n\n\n\n\n\n\n\n부상 데이터 분류하기\n\n\ninjury = damage_total.iloc[1::2]\ninjury\n\n\n\n\n\n\n\n\n1\n1\n1\n\n\n0\n\n\n\n\n\n\n\n전기적요인\n359\n276\n410\n\n\n기계적요인\n126\n105\n102\n\n\n화학적요인\n64\n79\n81\n\n\n가스누출\n83\n78\n141\n\n\n교통사고\n6\n17\n19\n\n\n부주의\n764\n760\n895\n\n\n기타\n39\n31\n20\n\n\n자연적요인\n2\n2\n5\n\n\n방화\n78\n77\n78\n\n\n방화의심\n61\n63\n53\n\n\n미상\n336\n366\n505\n\n\n\n\n\n\n\n\n\n사망,부상별 합계 ,평균 변수 및 백분율 변수 추가하기\n\n\ndeath_all = death.assign(total = death.sum(axis = 1),\n                         mean = lambda x : x[\"total\"] / 3 ,\n                         ratio = lambda x : (x[\"mean\"] / data_all[\"total\"]) * 100)\n\ninjury_all = injury.assign(total = injury.sum(axis = 1),\n                           mean = lambda x : x[\"total\"] / 3,\n                           ratio = lambda x : (x[\"mean\"] / data_all[\"total\"]) * 100)\n             \ninjury_all.head()\n\n\n\n\n\n\n\n\n1\n1\n1\ntotal\nmean\nratio\n\n\n0\n\n\n\n\n\n\n\n\n\n\n전기적요인\n359\n276\n410\n1045\n348.333333\n3.626961\n\n\n기계적요인\n126\n105\n102\n333\n111.000000\n2.787311\n\n\n화학적요인\n64\n79\n81\n224\n74.666667\n11.205603\n\n\n가스누출\n83\n78\n141\n302\n100.666667\n68.949772\n\n\n교통사고\n6\n17\n19\n42\n14.000000\n3.265941\n\n\n\n\n\n\n\n\n\n\n&lt;데이터 시각화&gt;\n\n총 화재 발생 대비 사망률 막대 그래프 생성\n\n\ndeath_all[\"ratio\"].plot.bar(rot=0)\nplt.xticks(fontsize=5, rotation=20)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n(연간 사망 횟수 평균/연간 화재 발생 횟수 평균*100) [%]\n\n\n\n총 화재 발생 대비 부상률 막대 그래프 생성\n\n\ninjury_all[\"ratio\"].plot.bar(rot=0)\nplt.xticks(fontsize=5, rotation=20)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n(연간 부상 횟수 평균/연간 화재 발생 횟수 평균*100) [%]\n\n\n\n\n&lt;결과&gt;\n\n사망률은 방화와 방화 의심, 부상률은 가스누출이 높게 나타남"
  },
  {
    "objectID": "fire_presentation.html#결론",
    "href": "fire_presentation.html#결론",
    "title": "계절별 화재발생 빈도 및 요인 분석",
    "section": "4. 결론",
    "text": "4. 결론\n\n건조한 날씨와 난방기구 사용으로 화재가 많이 발생하는 봄과 겨울에 특히 주의가 필요함\n화재 발생의 주요 원인이 부주의인 점을 감안할 때, 화재 예방을 위한 대중 교육과 캠페인이 중요함\n방화 및 방화 의심 화재에 의한 사망이 많으므로 고의적인 화재에 대한 강력한 법적 대응과 예방책을 마련해야 함\n가스 누출 화재에 의한 부상이 많으므로 가스 안전 관리와 관련된 법규와 교육을 강화할 필요가 있음"
  }
]